{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React quiz game\\\\React-Quiz-Game\\\\quiz-game\\\\src\\\\context\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cuurentQuestionIndex: 0,\n  score: 0,\n  questions: [{\n    question: \"What is the capital of France?\",\n    answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\n    correctAnswer: \"Paris\"\n  }, {\n    question: \"What is the capital of Spain?\",\n    answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\n    correctAnswer: \"Madrid\"\n  }, {\n    question: \"What is the capital of Germany?\",\n    answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\n    correctAnswer: \"Berlin\"\n  }, {\n    question: \"What is the capital of England?\",\n    answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\n    correctAnswer: \"London\"\n  }]\n};\nconst reducer = (state, action) => {\n  {\n    type: \"NEXT_QUESTION\";\n  }\n  if (action.type === \"NEXT_QUESTION\") {\n    return {\n      ...state,\n      cuurentQuestionIndex: state.cuurentQuestionIndex + 1\n    };\n  }\n  return state;\n};\nexport const QuizContext = /*#__PURE__*/createContext();\nexport const QuizProvider = ({\n  children\n}) => {\n  _s();\n  const value = useReducer(reducer, initialState);\n  console.log(\"render\", state);\n  return /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 16\n  }, this);\n};\n_s(QuizProvider, \"HDl9A1duRDI+maTNi9v2R1p+EwQ=\");\n_c = QuizProvider;\nvar _c;\n$RefreshReg$(_c, \"QuizProvider\");","map":{"version":3,"names":["createContext","jsxDEV","_jsxDEV","initialState","cuurentQuestionIndex","score","questions","question","answers","correctAnswer","reducer","state","action","type","QuizContext","QuizProvider","children","_s","value","useReducer","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React quiz game/React-Quiz-Game/quiz-game/src/context/quiz.js"],"sourcesContent":["import { createContext } from 'react';\r\n\r\nconst initialState = {\r\n    cuurentQuestionIndex: 0,\r\n    score: 0,\r\n    questions: [\r\n      {\r\n        question: \"What is the capital of France?\",\r\n        answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\r\n        correctAnswer: \"Paris\"\r\n      },\r\n      {\r\n        question: \"What is the capital of Spain?\",\r\n        answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\r\n        correctAnswer: \"Madrid\"\r\n      },\r\n      {\r\n        question: \"What is the capital of Germany?\",\r\n        answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\r\n        correctAnswer: \"Berlin\"\r\n      },\r\n      {\r\n        question: \"What is the capital of England?\",\r\n        answers: [\"Berlin\", \"Madrid\", \"Paris\", \"London\"],\r\n        correctAnswer: \"London\"\r\n      }\r\n    ]\r\n  };\r\n  \r\n  const reducer = (state, action) => {\r\n    {type: \"NEXT_QUESTION\"}\r\n    if (action.type === \"NEXT_QUESTION\") {\r\n      return {\r\n        ...state,\r\n        cuurentQuestionIndex: state.cuurentQuestionIndex + 1\r\n      };\r\n    }\r\n    return state;\r\n  };\r\n\r\nexport const QuizContext = createContext();\r\n\r\nexport const QuizProvider = ({children}) => {\r\n        const value = useReducer(reducer, initialState);\r\n        console.log(\"render\", state);\r\n        return <QuizContext.Provider value={value}>{children}</QuizContext.Provider>\r\n    };"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAG;EACjBC,oBAAoB,EAAE,CAAC;EACvBC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,CACT;IACEC,QAAQ,EAAE,gCAAgC;IAC1CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;IAChDC,aAAa,EAAE;EACjB,CAAC,EACD;IACEF,QAAQ,EAAE,+BAA+B;IACzCC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;IAChDC,aAAa,EAAE;EACjB,CAAC,EACD;IACEF,QAAQ,EAAE,iCAAiC;IAC3CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;IAChDC,aAAa,EAAE;EACjB,CAAC,EACD;IACEF,QAAQ,EAAE,iCAAiC;IAC3CC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC;IAChDC,aAAa,EAAE;EACjB,CAAC;AAEL,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC;IAACC,IAAI,EAAE,eAAe;EAAA;EACtB,IAAID,MAAM,CAACC,IAAI,KAAK,eAAe,EAAE;IACnC,OAAO;MACL,GAAGF,KAAK;MACRP,oBAAoB,EAAEO,KAAK,CAACP,oBAAoB,GAAG;IACrD,CAAC;EACH;EACA,OAAOO,KAAK;AACd,CAAC;AAEH,OAAO,MAAMG,WAAW,gBAAGd,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMe,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAAGC,UAAU,CAACT,OAAO,EAAEP,YAAY,CAAC;EAC/CiB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEV,KAAK,CAAC;EAC5B,oBAAOT,OAAA,CAACY,WAAW,CAACQ,QAAQ;IAACJ,KAAK,EAAEA,KAAM;IAAAF,QAAA,EAAEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;AAACT,EAAA,CAJOF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}